name: Build Linux x64 with AppImage (Fixed)

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-linux-x64:
    runs-on: ubuntu-22.04
    timeout-minutes: 40
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            ainative-studio/package-lock.json
            ainative-studio/build/package-lock.json
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libkrb5-dev
      
      - name: Install build dependencies
        working-directory: ainative-studio/build
        run: |
          for i in {1..5}; do
            npm ci && break
            if [ $i -eq 5 ]; then
              echo "npm ci in build/ failed too many times" >&2
              exit 1
            fi
            echo "npm ci failed $i, trying again..."
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install dependencies
        working-directory: ainative-studio
        run: |
          for i in {1..5}; do
            npm ci && break
            if [ $i -eq 5 ]; then
              echo "npm ci failed too many times" >&2
              exit 1
            fi
            echo "npm ci failed $i, trying again..."
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Cache node build cache
        uses: actions/cache@v4
        with:
          path: |
            ainative-studio/node_modules/.cache
            ainative-studio/extensions/*/node_modules/.cache
          key: node-cache-${{ runner.os }}-${{ hashFiles('ainative-studio/package-lock.json') }}
          restore-keys: |
            node-cache-${{ runner.os }}-
      
      - name: Cache gulp cache
        uses: actions/cache@v4
        with:
          path: ~/.gulp-cache
          key: ${{ runner.os }}-gulp-${{ hashFiles('ainative-studio/package-lock.json', 'ainative-studio/build/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-gulp-
      
      - name: Build React components
        working-directory: ainative-studio
        run: npm run buildreact
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
      
      - name: Compile TypeScript
        working-directory: ainative-studio
        run: npm run gulp compile-build-without-mangling
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
          UV_THREADPOOL_SIZE: 64
      
      - name: Build extensions in parallel
        working-directory: ainative-studio
        run: |
          # Build critical extensions first
          npm run gulp compile-extension:configuration-editing &
          npm run gulp compile-extension:css-language-features &
          npm run gulp compile-extension:typescript-language-features &
          npm run gulp compile-extension:git &
          wait
          
          # Build remaining extensions in parallel batches
          npm run gulp compile-extension:debug-auto-launch &
          npm run gulp compile-extension:debug-server-ready &
          npm run gulp compile-extension:emmet &
          npm run gulp compile-extension:extension-editing &
          wait
          
          npm run gulp compile-extension:git-base &
          npm run gulp compile-extension:github &
          npm run gulp compile-extension:github-authentication &
          npm run gulp compile-extension:grunt &
          wait
          
          npm run gulp compile-extension:gulp &
          npm run gulp compile-extension:html-language-features &
          npm run gulp compile-extension:ipynb &
          npm run gulp compile-extension:jake &
          wait
          
          npm run gulp compile-extension:json-language-features &
          npm run gulp compile-extension:markdown-language-features &
          npm run gulp compile-extension:markdown-math &
          npm run gulp compile-extension:media-preview &
          wait
          
          npm run gulp compile-extension:merge-conflict &
          npm run gulp compile-extension:terminal-suggest &
          npm run gulp compile-extension:microsoft-authentication &
          npm run gulp compile-extension:notebook-renderers &
          wait
          
          npm run gulp compile-extension:npm &
          npm run gulp compile-extension:php-language-features &
          npm run gulp compile-extension:references-view &
          npm run gulp compile-extension:search-result &
          wait
          
          npm run gulp compile-extension:simple-browser &
          npm run gulp compile-extension:tunnel-forwarding &
          npm run gulp compile-extension:vscode-api-tests &
          npm run gulp compile-extension:vscode-colorize-tests &
          wait
          
          # Finish remaining extensions
          npm run gulp compile-extension:vscode-colorize-perf-tests || true
          npm run gulp compile-extension:vscode-test-resolver || true
          npm run gulp compile-extension:vscode-selfhost-test-provider || true
          npm run gulp compile-extension:vscode-selfhost-import-aid || true
        env:
          NODE_OPTIONS: "--max-old-space-size=6144"
      
      - name: Minify and package
        working-directory: ainative-studio
        run: |
          npm run gulp minify-vscode
          npm run gulp vscode-linux-x64-min-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_OPTIONS: "--max-old-space-size=8192"
          UV_THREADPOOL_SIZE: 64
      
      - name: Verify build output
        run: |
          if [ ! -d "VSCode-linux-x64" ]; then
            echo "::error::Build output directory not found!"
            echo "Contents of current directory:"
            ls -la
            echo "Contents of parent directory:"
            ls -la ../
            exit 1
          fi
      
      - name: Create archive with wrapper scripts
        working-directory: ainative-studio
        run: |
          echo "Creating wrapper scripts and archive..."
          echo "Current directory: $(pwd)"
          echo "Contents:"
          ls -la
          
          if [ -d "VSCode-linux-x64" ]; then
            echo "Found VSCode-linux-x64 in current directory"
            cd VSCode-linux-x64
            
            echo "Contents of VSCode-linux-x64:"
            ls -la
            
            # Create wrapper scripts for easier launching
            echo "Creating wrapper scripts..."
            echo '#!/bin/bash' > ainative-studio
            echo 'DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"' >> ainative-studio
            echo 'exec "${DIR}/void" "$@"' >> ainative-studio
            chmod +x ainative-studio
            
            echo '#!/bin/bash' > ainativestudio  
            echo 'DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"' >> ainativestudio
            echo 'exec "${DIR}/void" "$@"' >> ainativestudio
            chmod +x ainativestudio
            
            echo "Wrapper scripts created, verifying:"
            ls -la ainative*
            
            echo "Creating tar.gz archive..."
            tar --warning=no-file-changed -czf ../ainative-studio-linux-x64.tar.gz . || true
            cd ..
          elif [ -d "../VSCode-linux-x64" ]; then
            echo "Found VSCode-linux-x64 in parent directory"
            cd ../VSCode-linux-x64
            
            echo "Contents of VSCode-linux-x64:"
            ls -la
            
            # Create wrapper scripts for easier launching
            echo "Creating wrapper scripts..."
            echo '#!/bin/bash' > ainative-studio
            echo 'DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"' >> ainative-studio
            echo 'exec "${DIR}/void" "$@"' >> ainative-studio
            chmod +x ainative-studio
            
            echo '#!/bin/bash' > ainativestudio
            echo 'DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"' >> ainativestudio
            echo 'exec "${DIR}/void" "$@"' >> ainativestudio
            chmod +x ainativestudio
            
            echo "Wrapper scripts created, verifying:"
            ls -la ainative*
            
            echo "Creating tar.gz archive..."
            tar --warning=no-file-changed -czf ainative-studio-linux-x64.tar.gz . || true
            mv ainative-studio-linux-x64.tar.gz ../ainative-studio/
          else
            echo "::error::VSCode-linux-x64 directory not found in current or parent directory!"
            echo "Contents of current directory:"
            ls -la
            echo "Contents of parent directory:"
            ls -la ../
            exit 1
          fi

      - name: Download and setup AppImage tools
        run: |
          # Install FUSE for AppImage
          sudo apt-get update
          sudo apt-get install -y libfuse2
          
          # Download AppImage tool
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool
          
          # Extract AppImage tool to avoid FUSE issues in container
          ./appimagetool --appimage-extract
          mv squashfs-root appimagetool-extracted
        working-directory: ainative-studio

      - name: Create AppImage structure
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          
          # Copy the application
          if [ -d "VSCode-linux-x64" ]; then
            cp -r VSCode-linux-x64/* AppDir/usr/bin/
          elif [ -d "../VSCode-linux-x64" ]; then
            cp -r ../VSCode-linux-x64/* AppDir/usr/bin/
          fi
          
          # Create desktop entry
          cat > AppDir/usr/share/applications/ainative-studio.desktop << 'EOF'
          [Desktop Entry]
          Type=Application
          Name=AINative Studio
          GenericName=Code Editor
          Comment=AI-powered code editor
          Exec=code %F
          Icon=ainative-studio
          Categories=Development;IDE;TextEditor;
          MimeType=text/plain;text/x-chdr;text/x-csrc;text/x-c++hdr;text/x-c++src;text/x-java;text/x-dsrc;text/x-pascal;text/x-perl;text/x-python;application/x-php;application/x-httpd-php3;application/x-httpd-php4;application/x-httpd-php5;application/javascript;application/json;text/css;text/html;text/xml;
          Keywords=code;development;programming;ai;editor;ide;ainative;studio;
          StartupNotify=true
          StartupWMClass=ainative-studio
          EOF
          
          # Copy logo from ai_native_studio_icons directory
          cp ./ai_native_studio_icons/ai_native_studio_256x256.png AppDir/usr/share/icons/hicolor/256x256/apps/ainative-studio.png
          
          # Create AppRun script
          cat > AppDir/AppRun << 'EOF'
          #!/bin/bash
          HERE="$(dirname "$(readlink -f "${0}")")"
          exec "${HERE}/usr/bin/void" --no-sandbox "$@"
          EOF
          chmod +x AppDir/AppRun
          
          # Copy desktop file to root
          cp AppDir/usr/share/applications/ainative-studio.desktop AppDir/
          
          # Copy logo to root for AppImage
          cp AppDir/usr/share/icons/hicolor/256x256/apps/ainative-studio.png AppDir/ainative-studio.png
        working-directory: ainative-studio

      - name: Build AppImage
        run: |
          # Use the extracted AppImage tool with correct architecture
          ARCH=x86_64 ./appimagetool-extracted/AppRun AppDir ainative-studio-linux-x64.AppImage
          # Make AppImage executable
          chmod +x ainative-studio-linux-x64.AppImage
          
          # Verify AppImage is executable and functional
          echo "Verifying AppImage..."
          ls -la ainative-studio-linux-x64.AppImage
          
          # Test that AppImage can be executed (should show help or version)
          echo "Testing AppImage execution..."
          ./ainative-studio-linux-x64.AppImage --version || echo "AppImage version check failed, but file created"
          
          # Double-check permissions
          if [ -x ainative-studio-linux-x64.AppImage ]; then
            echo "✅ AppImage is executable"
          else
            echo "❌ AppImage is not executable"
            chmod +x ainative-studio-linux-x64.AppImage
            echo "Fixed permissions"
          fi
        working-directory: ainative-studio
        env:
          ARCH: x86_64

      - name: Upload tar.gz artifact
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-linux-x64-tar
          path: ainative-studio/ainative-studio-linux-x64.tar.gz
          retention-days: 7

      - name: Create DEB package
        run: |
          mkdir -p deb-package/DEBIAN
          mkdir -p deb-package/opt/ainative-studio
          mkdir -p deb-package/usr/bin
          mkdir -p deb-package/usr/share/applications
          mkdir -p deb-package/usr/share/icons/hicolor/256x256/apps
          
          # Copy application files
          if [ -d "VSCode-linux-x64" ]; then
            cp -r VSCode-linux-x64/* deb-package/opt/ainative-studio/
          elif [ -d "../VSCode-linux-x64" ]; then
            cp -r ../VSCode-linux-x64/* deb-package/opt/ainative-studio/
          fi
          
          # Create wrapper scripts for command line access
          echo '#!/bin/bash' > deb-package/usr/bin/ainative-studio
          echo 'exec /opt/ainative-studio/void "$@"' >> deb-package/usr/bin/ainative-studio
          chmod +x deb-package/usr/bin/ainative-studio
          
          # Create alias for ainativestudio command
          echo '#!/bin/bash' > deb-package/usr/bin/ainativestudio
          echo 'exec /opt/ainative-studio/void "$@"' >> deb-package/usr/bin/ainativestudio
          chmod +x deb-package/usr/bin/ainativestudio
          
          # Copy desktop file and icon
          cp ./ai_native_studio_icons/ai_native_studio_256x256.png deb-package/usr/share/icons/hicolor/256x256/apps/ainative-studio.png
          
          cat > deb-package/usr/share/applications/ainative-studio.desktop << 'EOF'
          [Desktop Entry]
          Type=Application
          Name=AINative Studio
          GenericName=Code Editor
          Comment=AI-powered code editor
          Exec=ainative-studio %F
          Icon=ainative-studio
          Categories=Development;IDE;TextEditor;
          MimeType=text/plain;text/x-chdr;text/x-csrc;text/x-c++hdr;text/x-c++src;text/x-java;text/x-dsrc;text/x-pascal;text/x-perl;text/x-python;application/x-php;application/x-httpd-php3;application/x-httpd-php4;application/x-httpd-php5;application/javascript;application/json;text/css;text/html;text/xml;
          Keywords=code;development;programming;ai;editor;ide;ainative;studio;
          StartupNotify=true
          StartupWMClass=ainative-studio
          EOF
          
          # Create control file with enhanced description
          cat > deb-package/DEBIAN/control << 'EOF'
          Package: ainative-studio
          Version: 1.0.0
          Section: editors
          Priority: optional
          Architecture: amd64
          Maintainer: AINative Studio Team <team@ainative.studio>
          Homepage: https://www.ainative.studio/
          Description: AINative Studio - AI-powered code editor
           AINative Studio is a revolutionary AI-powered code editor built on the
           robust foundation of Visual Studio Code. It provides intelligent code
           completion, AI-assisted editing, and advanced development capabilities.
           .
           Key Features:
           * AI-powered code completion and suggestions
           * Intelligent code editing and refactoring
           * Advanced debugging and testing tools
           * Extensive language support and extensions
           * Built-in terminal and Git integration
           .
           Perfect for developers who want to leverage AI to accelerate their
           coding workflow while maintaining full control over their development
           environment.
          Depends: libnss3, libatk-bridge2.0-0, libxkbfile1, libsecret-1-0
          EOF
          
          # Build DEB package
          dpkg-deb --build deb-package ainative-studio-linux-x64.deb
        working-directory: ainative-studio

      - name: Create RPM package
        run: |
          # Install RPM build tools
          sudo apt-get update
          sudo apt-get install -y rpm
          
          mkdir -p rpm-build/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          
          # Create tarball for RPM
          mkdir -p ainative-studio-1.0.0
          if [ -d "VSCode-linux-x64" ]; then
            cp -r VSCode-linux-x64/* ainative-studio-1.0.0/
          elif [ -d "../VSCode-linux-x64" ]; then
            cp -r ../VSCode-linux-x64/* ainative-studio-1.0.0/
          fi
          tar -czf rpm-build/SOURCES/ainative-studio-1.0.0.tar.gz ainative-studio-1.0.0
          
          # Copy logo from ai_native_studio_icons directory
          cp ./ai_native_studio_icons/ai_native_studio_256x256.png rpm-build/SOURCES/logo.png
          
          # Create spec file
          cat > rpm-build/SPECS/ainative-studio.spec << 'EOF'
          Name:           ainative-studio
          Version:        1.0.0
          Release:        1%{?dist}
          Summary:        AINative Studio - AI-powered code editor
          URL:            https://www.ainative.studio/
          
          License:        MIT
          Source0:        %{name}-%{version}.tar.gz
          Source1:        logo.png
          
          BuildArch:      x86_64
          Requires:       nss, atk, libsecret, libXtst
          Requires:       libXkbfile1
          
          %description
          AINative Studio is a revolutionary AI-powered code editor built on the
          robust foundation of Visual Studio Code. It provides intelligent code
          completion, AI-assisted editing, and advanced development capabilities.
          
          Key Features:
          - AI-powered code completion and suggestions
          - Intelligent code editing and refactoring
          - Advanced debugging and testing tools
          - Extensive language support and extensions
          - Built-in terminal and Git integration
          
          Perfect for developers who want to leverage AI to accelerate their
          coding workflow while maintaining full control over their development
          environment.
          
          %prep
          %setup -q
          
          %install
          mkdir -p %{buildroot}/opt/ainative-studio
          mkdir -p %{buildroot}/usr/bin
          mkdir -p %{buildroot}/usr/share/applications
          mkdir -p %{buildroot}/usr/share/icons/hicolor/256x256/apps
          
          cp -r * %{buildroot}/opt/ainative-studio/
          
          # Create wrapper scripts
          cat > %{buildroot}/usr/bin/ainative-studio << 'SCRIPT'
          #!/bin/bash
          exec /opt/ainative-studio/void "$@"
          SCRIPT
          chmod +x %{buildroot}/usr/bin/ainative-studio
          
          cat > %{buildroot}/usr/bin/ainativestudio << 'SCRIPT'
          #!/bin/bash
          exec /opt/ainative-studio/void "$@"
          SCRIPT
          chmod +x %{buildroot}/usr/bin/ainativestudio
          
          # Install icon and desktop file
          cp %{SOURCE1} %{buildroot}/usr/share/icons/hicolor/256x256/apps/ainative-studio.png
          
          cat > %{buildroot}/usr/share/applications/ainative-studio.desktop << 'DESKTOP'
          [Desktop Entry]
          Type=Application
          Name=AINative Studio
          GenericName=Code Editor
          Comment=AI-powered code editor
          Exec=ainative-studio %F
          Icon=ainative-studio
          Categories=Development;IDE;TextEditor;
          MimeType=text/plain;text/x-chdr;text/x-csrc;text/x-c++hdr;text/x-c++src;text/x-java;text/x-dsrc;text/x-pascal;text/x-perl;text/x-python;application/x-php;application/x-httpd-php3;application/x-httpd-php4;application/x-httpd-php5;application/javascript;application/json;text/css;text/html;text/xml;
          Keywords=code;development;programming;ai;editor;ide;ainative;studio;
          StartupNotify=true
          StartupWMClass=ainative-studio
          DESKTOP
          
          %files
          /opt/ainative-studio/*
          /usr/bin/ainative-studio
          /usr/bin/ainativestudio
          /usr/share/applications/ainative-studio.desktop
          /usr/share/icons/hicolor/256x256/apps/ainative-studio.png
          
          %changelog
          * Wed Jan 01 2025 AINative Studio Team <team@ainativestudio.com> - 1.0.0-1
          - Initial release
          EOF
          
          # Build RPM
          rpmbuild --define "_topdir $(pwd)/rpm-build" -ba rpm-build/SPECS/ainative-studio.spec
          cp rpm-build/RPMS/x86_64/ainative-studio-*.rpm ./ainative-studio-linux-x64.rpm
        working-directory: ainative-studio

      - name: Upload tar.gz artifact
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-linux-x64-tar
          path: ainative-studio/ainative-studio-linux-x64.tar.gz
          retention-days: 7
          overwrite: true

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-linux-x64-appimage
          path: ainative-studio/ainative-studio-linux-x64.AppImage
          retention-days: 7
          overwrite: true

      - name: Upload DEB package
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-linux-x64-deb
          path: ainative-studio/ainative-studio-linux-x64.deb
          retention-days: 7
          overwrite: true

      - name: Upload RPM package
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-linux-x64-rpm
          path: ainative-studio/ainative-studio-linux-x64.rpm
          retention-days: 7
          overwrite: true